{"version":3,"sources":["constants.ts","components/NonAccidental.tsx","components/Accidental.tsx","components/Octave.tsx","Keyboard.tsx","Volume.tsx","WaveSelector.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["keyboardEventCodesToNotes","Map","set","freq","octave","pitch","NOTE_FREQUENCIES","NonAccidental","frequency","playTone","stopTone","handleMouseDownAndOver","buttons","note","useRef","document","createElement","useEffect","current","scrollIntoView","className","id","onContextMenu","mouseEvnt","preventDefault","onMouseDown","onMouseLeave","onMouseOver","onMouseUp","onTouchEnd","onTouchStart","ref","Accidental","Octave","notes","octaveNumber","Keyboard","Volume","gainNode","useState","currentVolume","setCurrentVolume","gain","value","max","min","onChange","target","parseFloat","step","type","WaveSelector","currentWaveType","handleChange","App","audioContext","window","AudioContext","webkitAudioContext","oscillatorList","mainGainNode","createGain","connect","destination","sineTerms","Float32Array","cosineTerms","length","customWaveform","createPeriodicWave","i","noteDiv","getElementById","includes","oscillator","createOscillator","waveType","setPeriodicWave","start","undefined","replace","stop","setWaveType","handleKeyboardShortcut","code","get","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5eab0bfa.chunk.js","sourcesContent":["export const keyboardEventCodesToNotes = new Map<string, Note>();\nkeyboardEventCodesToNotes.set(\"KeyQ\", { freq: 261.63, octave: 4, pitch: \"C\"});\nkeyboardEventCodesToNotes.set(\"Digit2\", { freq: 277.18, octave: 4, pitch: \"C#\"});\nkeyboardEventCodesToNotes.set(\"KeyW\", { freq: 293.66, octave: 4, pitch: \"D\"});\nkeyboardEventCodesToNotes.set(\"Digit3\", { freq: 311.13, octave: 4, pitch: \"D#\"});\nkeyboardEventCodesToNotes.set(\"KeyE\", { freq: 329.63, octave: 4, pitch: \"E\"});\nkeyboardEventCodesToNotes.set(\"KeyR\", { freq: 349.23, octave: 4, pitch: \"F\"});\nkeyboardEventCodesToNotes.set(\"Digit5\", { freq: 369.99, octave: 4, pitch: \"F#\"});\nkeyboardEventCodesToNotes.set(\"KeyT\", { freq: 392.00, octave: 4, pitch: \"G\"});\nkeyboardEventCodesToNotes.set(\"Digit6\", { freq: 415.30, octave: 4, pitch: \"G#\"});\nkeyboardEventCodesToNotes.set(\"KeyY\", { freq: 440.00, octave: 4, pitch: \"A\"});\nkeyboardEventCodesToNotes.set(\"Digit7\", { freq: 466.16, octave: 4, pitch: \"A#\"});\nkeyboardEventCodesToNotes.set(\"KeyU\", { freq: 493.88, octave: 4, pitch: \"B\"});\nkeyboardEventCodesToNotes.set(\"KeyI\", { freq: 523.25, octave: 5, pitch: \"C\"});\nkeyboardEventCodesToNotes.set(\"Digit9\", { freq: 554.37, octave: 5, pitch: \"C#\"});\nkeyboardEventCodesToNotes.set(\"KeyO\", { freq: 587.33, octave: 5, pitch: \"D\"});\nkeyboardEventCodesToNotes.set(\"Digit0\", { freq: 622.25, octave: 5, pitch: \"D#\"});\nkeyboardEventCodesToNotes.set(\"KeyP\", { freq: 659.25, octave: 5, pitch: \"E\"});\nkeyboardEventCodesToNotes.set(\"BracketLeft\", { freq: 698.46, octave: 5, pitch: \"F\"});\nkeyboardEventCodesToNotes.set(\"Equal\", { freq: 739.99, octave: 5, pitch: \"F#\"});\nkeyboardEventCodesToNotes.set(\"BracketRight\", { freq: 783.99, octave: 5, pitch: \"G\"});\nkeyboardEventCodesToNotes.set(\"Backspace\", { freq: 830.61, octave: 5, pitch: \"G#\"});\nkeyboardEventCodesToNotes.set(\"Backslash\", { freq: 880.00, octave: 5, pitch: \"A\"});\n\nexport const NOTE_FREQUENCIES: { [pitch: string]: number }[] = [\n    {\n        \"A\": 27.500000000000000,\n        \"A#\": 29.135235094880619,\n        \"B\": 30.867706328507756,\n    },\n    {\n        \"C\": 32.703195662574829,\n        \"C#\": 34.647828872109012,\n        \"D\": 36.708095989675945,\n        \"D#\": 38.890872965260113,\n        \"E\": 41.203444614108741,\n        \"F\": 43.653528929125485,\n        \"F#\": 46.249302838954299,\n        \"G\": 48.999429497718661,\n        \"G#\": 51.913087197493142,\n        \"A\": 55.000000000000000,\n        \"A#\": 58.270470189761239,\n        \"B\": 61.735412657015513,\n    },\n    {\n        \"C\": 65.41, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"C#\": 69.30, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D\": 73.42, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D#\": 77.78, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"E\": 82.41, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F\": 87.31, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F#\": 92.50, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G\": 98.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G#\": 103.83, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A\": 110.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A#\": 116.54, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"B\": 123.47, // https://pages.mtu.edu/~suits/notefreqs.html\n    },\n    {\n        \"C\": 130.81, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"C#\": 138.59, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D\": 146.83, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D#\": 155.56, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"E\": 164.81, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F\": 174.61, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F#\": 185.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G\": 196.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G#\": 207.65, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A\": 220.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A#\": 233.08, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"B\": 246.94, // https://pages.mtu.edu/~suits/notefreqs.html\n    },\n    {\n        \"C\": 261.63, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"C#\": 277.18, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D\": 293.66, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D#\": 311.13, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"E\": 329.63, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F\": 349.23, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F#\": 369.99, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G\": 392.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G#\": 415.30, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A\": 440.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A#\": 466.16, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"B\": 493.88, // https://pages.mtu.edu/~suits/notefreqs.html\n    },\n    {\n        \"C\": 523.25, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"C#\": 554.37, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D\": 587.33, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D#\": 622.25, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"E\": 659.25, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F\": 698.46, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F#\": 739.99, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G\": 783.99, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G#\": 830.61, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A\": 880.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A#\": 932.33, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"B\": 987.77, // https://pages.mtu.edu/~suits/notefreqs.html\n    },\n    {\n        \"C\": 1046.50, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"C#\": 1108.73, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D\": 1174.66, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"D#\": 1244.51, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"E\": 1318.51, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F\": 1396.91, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"F#\": 1479.98, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G\": 1567.98, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"G#\": 1661.22, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A\": 1760.00, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"A#\": 1864.66, // https://pages.mtu.edu/~suits/notefreqs.html\n        \"B\": 1975.53, // https://pages.mtu.edu/~suits/notefreqs.html\n    },\n    {\n        \"C\": 2093.004522404789077,\n        \"C#\": 2217.461047814976769,\n        \"D\": 2349.318143339260482,\n        \"D#\": 2489.015869776647285,\n        \"E\": 2637.020455302959437,\n        \"F\": 2793.825851464031075,\n        \"F#\": 2959.955381693075191,\n        \"G\": 3135.963487853994352,\n        \"G#\": 3322.437580639561108,\n        \"A\": 3520.000000000000000,\n        \"A#\": 3729.310092144719331,\n        \"B\": 3951.066410048992894,\n    },\n    {\n        \"C\": 4186.009044809578154,\n    }\n];\n\nexport type Note = {\n    freq: number,\n    octave: number,\n    pitch: string,\n};","import { useEffect, useRef } from \"react\";\n\nfunction NonAccidental(\n    { frequency, octave, pitch, playTone, stopTone }:\n    { frequency: number, octave: number, pitch: string,\n        playTone: (freq: number, octave: number, pitch: string) => void,\n        stopTone: (octave: number, pitch: string) => void }\n) {\n    const handleMouseDownAndOver = (\n        buttons: number, freq: number, octave: number, pitch: string\n    ): void => { // Only play the tone if the left mouse button is down.\n        if (buttons & 1) playTone(frequency, octave, pitch);\n    }\n\n    const note = useRef(document.createElement(\"div\"));\n\n    useEffect(() => { // Start at the end of the keyboard.\n        if (octave === 8 && pitch === \"C\") note.current.scrollIntoView(false);\n    }, [octave, pitch])\n    \n    return (\n        <div\n            className=\"NonAccidental\"\n            id={`${pitch}${octave}`} // Need this to style notes that are playing\n            // Pressing and holding a note on a touchscreen shouldn't open the\n            // right-click menu!\n            onContextMenu={(mouseEvnt: React.MouseEvent) => mouseEvnt.preventDefault()}\n            onMouseDown={({buttons}: {buttons: number}) =>\n                handleMouseDownAndOver(buttons, frequency, octave, pitch)}\n            onMouseLeave={() => stopTone(octave, pitch)}\n            onMouseOver={({buttons}: {buttons: number}) =>\n                handleMouseDownAndOver(buttons, frequency, octave, pitch)}\n            onMouseUp={() => stopTone(octave, pitch)}\n            onTouchEnd={() => stopTone(octave, pitch)}\n            onTouchStart={() => playTone(frequency, octave, pitch)}\n            ref={note}\n        >\n            <span className=\"NonAccidentalLabel\">\n                {pitch}<sub>{octave}</sub>\n            </span>\n        </div>\n    );\n}\n\nexport default NonAccidental;","function Accidental(\n    { frequency, octave, pitch, playTone, stopTone }:\n    { frequency: number, octave: number, pitch: string,\n        playTone: (freq: number, octave: number, pitch: string) => void,\n        stopTone: (octave: number, pitch: string) => void }\n) {\n    const handleMouseDownAndOver = (\n        buttons: number, freq: number, octave: number, pitch: string\n    ): void => { // Only play the tone if the left mouse button is down.\n        if (buttons & 1) playTone(frequency, octave, pitch);\n    }\n    \n    return (\n        <div\n            className={`Accidental ${pitch}`}\n            id={`${pitch}${octave}`} // Need this to style notes that are playing\n            // Pressing and holding a note on a touchscreen shouldn't open the\n            // right-click menu!\n            onContextMenu={(mouseEvnt: React.MouseEvent) => mouseEvnt.preventDefault()}\n            onMouseDown={({buttons}: {buttons: number}) =>\n                handleMouseDownAndOver(buttons, frequency, octave, pitch)}\n            onMouseLeave={() => stopTone(octave, pitch)}\n            onMouseOver={({buttons}: {buttons: number}) =>\n                handleMouseDownAndOver(buttons, frequency, octave, pitch)}\n            onMouseUp={() => stopTone(octave, pitch)}\n            onTouchEnd={() => stopTone(octave, pitch)}\n            onTouchStart={() => playTone(frequency, octave, pitch)}\n        >\n            {pitch}<sub>{octave}</sub>\n        </div>\n    );\n}\n\nexport default Accidental;","import NonAccidental from './NonAccidental';\nimport Accidental from './Accidental';\n\nfunction Octave(\n    { notes, octaveNumber, playTone, stopTone }:\n    { notes: { [note: string]: number }, octaveNumber: number,\n      playTone: (freq: number, octave: number, pitch: string) => void,\n      stopTone: (octave: number, pitch: string) => void }\n) {\n    if (octaveNumber === 0)\n        return (\n            <div className=\"Octave\">\n                <NonAccidental \n                    frequency={notes[\"A\"]}\n                    octave={octaveNumber}\n                    pitch=\"A\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n                />\n                <Accidental\n                    frequency={notes[\"A#\"]}\n                    octave={octaveNumber}\n                    pitch=\"A#\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n                />\n                <NonAccidental \n                    frequency={notes[\"B\"]}\n                    octave={octaveNumber}\n                    pitch=\"B\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n                />\n            </div>\n        );\n    \n    if (octaveNumber === 8)\n        return (\n            <div className=\"Octave\">\n                <NonAccidental \n                    frequency={notes[\"C\"]}\n                    octave={octaveNumber}\n                    pitch=\"C\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n                />\n            </div>\n        );\n    \n    return (\n        <div className=\"Octave\">\n            <NonAccidental \n                frequency={notes[\"C\"]}\n                octave={octaveNumber}\n                pitch=\"C\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Accidental\n                frequency={notes[\"C#\"]}\n                octave={octaveNumber}\n                pitch=\"C#\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n            />\n            <NonAccidental \n                frequency={notes[\"D\"]}\n                octave={octaveNumber}\n                pitch=\"D\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Accidental\n                frequency={notes[\"D#\"]}\n                octave={octaveNumber}\n                pitch=\"D#\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n            />\n            <NonAccidental \n                frequency={notes[\"E\"]}\n                octave={octaveNumber}\n                pitch=\"E\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <NonAccidental \n                frequency={notes[\"F\"]}\n                octave={octaveNumber}\n                pitch=\"F\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Accidental\n                frequency={notes[\"F#\"]}\n                octave={octaveNumber}\n                pitch=\"F#\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n            />\n            <NonAccidental \n                frequency={notes[\"G\"]}\n                octave={octaveNumber}\n                pitch=\"G\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Accidental\n                frequency={notes[\"G#\"]}\n                octave={octaveNumber}\n                pitch=\"G#\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n            />\n            <NonAccidental \n                frequency={notes[\"A\"]}\n                octave={octaveNumber}\n                pitch=\"A\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Accidental\n                frequency={notes[\"A#\"]}\n                octave={octaveNumber}\n                pitch=\"A#\"\n                    playTone={playTone}\n                    stopTone={stopTone}\n            />\n            <NonAccidental \n                frequency={notes[\"B\"]}\n                octave={octaveNumber}\n                pitch=\"B\"\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n        </div>\n    );\n}\n\nexport default Octave;","import Octave from './components/Octave';\nimport { NOTE_FREQUENCIES } from './constants';\n\nfunction Keyboard({playTone, stopTone}: {\n        playTone: (freq: number, octave: number, pitch: string) => void,\n        stopTone: (octave: number, pitch: string) => void\n    }) {\n    return (\n        <main className=\"Keyboard\">\n            <Octave\n                notes={NOTE_FREQUENCIES[0]}\n                octaveNumber={0}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[1]}\n                octaveNumber={1}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[2]}\n                octaveNumber={2}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[3]}\n                octaveNumber={3}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[4]}\n                octaveNumber={4}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[5]}\n                octaveNumber={5}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[6]}\n                octaveNumber={6}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[7]}\n                octaveNumber={7}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n            <Octave\n                notes={NOTE_FREQUENCIES[8]}\n                octaveNumber={8}\n                playTone={playTone}\n                stopTone={stopTone}\n            />\n        </main>\n    );\n}\n\nexport default Keyboard;","import { useEffect, useState } from \"react\";\n\nfunction Volume({gainNode}: {gainNode: GainNode}) {\n    const initialVolume = 1.0;\n    const [currentVolume, setCurrentVolume] = useState(initialVolume);\n    const handleChange = ({target}: {target: HTMLInputElement}): void => {\n        setCurrentVolume(parseFloat(target.value));\n    }\n    useEffect(() => {\n        gainNode.gain.value = currentVolume;\n    })\n    return (\n        <div className=\"Volume\">\n            <br />Volume<br />\n            <input\n                max={2.0}\n                min={0.0}\n                onChange={handleChange}\n                step={0.01}\n                type=\"range\"\n                value={currentVolume}\n            />\n        </div>\n    );\n}\n\nexport default Volume;","function WaveSelector({currentWaveType, handleChange}: {\n    currentWaveType: OscillatorType,\n    handleChange: ({target: { value }}: {target: HTMLSelectElement}) => void\n}) {\n    return (\n        <div className=\"WaveSelector\">\n            Waveform<br />\n            <select onChange={handleChange} value={currentWaveType}>\n                <option value=\"custom\">Custom</option>\n                <option value=\"sawtooth\">Sawtooth</option>\n                <option value=\"sine\">Sine</option>\n                <option value=\"square\">Square</option>\n                <option value=\"triangle\">Triangle</option>\n            </select>\n        </div>\n    )\n}\n\nexport default WaveSelector;","import { keyboardEventCodesToNotes } from './constants';\nimport Keyboard from './Keyboard';\nimport Volume from './Volume';\nimport WaveSelector from './WaveSelector';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const audioContext: AudioContext =\n    new (window.AudioContext || window.webkitAudioContext)();\n  const oscillatorList: { [key: string]: OscillatorNode }[] = [];\n\n  const mainGainNode: GainNode = audioContext.createGain();\n  mainGainNode.connect(audioContext.destination);\n  \n  const sineTerms: Float32Array = new Float32Array([0, 0, 1, 0, 1]);\n  const cosineTerms: Float32Array = new Float32Array(sineTerms.length);\n  const customWaveform: PeriodicWave\n    = audioContext.createPeriodicWave(cosineTerms, sineTerms);\n\n  for (let i = 0; i < 9; i++)\n    oscillatorList[i] = {};\n\n  const playTone = (freq: number, octave: number, pitch: string): void => {\n    const noteDiv = document.getElementById(`${pitch}${octave}`);\n    if (noteDiv === null || noteDiv.className.includes(\"active\")) return;\n    const oscillator: OscillatorNode = audioContext.createOscillator();\n    oscillator.connect(mainGainNode);\n    if (waveType === \"custom\") oscillator.setPeriodicWave(customWaveform);\n    else oscillator.type = waveType;\n    oscillator.frequency.value = freq;\n    noteDiv.className += \" active\";\n    oscillator.start();\n    oscillatorList[octave][pitch] = oscillator;\n  }\n\n  const stopTone = (octave: number, pitch: string): void => {\n    // It's important to make sure the oscillator we're trying to stop exists.\n    // If it doesn't, we can get a TypeError: undefined is not an object\n    // (evaluating 'oscillatorList[octave][pitch].stop').\n    if (oscillatorList[octave][pitch] === undefined) return;\n    const noteDiv = document.getElementById(`${pitch}${octave}`);\n    if (noteDiv === null) return; // If, somehow, noteDiv is null, we exit.\n    noteDiv.className = noteDiv.className.replace(\" active\", \"\");\n    oscillatorList[octave][pitch].stop();\n    // It's really important that we delete the OscillatorNode\n    // after we stop it, otherwise we can get the following\n    // error in Safari: InvalidStateError: The object is in an invalid state.\n    delete oscillatorList[octave][pitch];\n  }\n\n  const [waveType, setWaveType]: [\n    waveType: OscillatorType,\n    setWaveType: React.Dispatch<React.SetStateAction<OscillatorType>>\n  ] = useState((\"custom\" as OscillatorType));\n\n  const changeWaveTypeTo = (\n    { target: { value } }: { target: HTMLSelectElement }\n  ): void => {\n    if (value === \"custom\") setWaveType(value);\n    if (value === \"sawtooth\") setWaveType(value);\n    if (value === \"sine\") setWaveType(value);\n    if (value === \"square\") setWaveType(value);\n    if (value === \"triangle\") setWaveType(value);\n  }\n\n  useEffect(() => {\n    const handleKeyboardShortcut = (\n      {code, type}: {code: string, type: string}\n    ): void => {\n      const note = keyboardEventCodesToNotes.get(code);\n      if (note === undefined) return; // Do nothing if there's no shortcut for that key.\n      const { freq, octave, pitch } = note;\n      if (type === \"keydown\") playTone(freq, octave, pitch);\n      if (type === \"keyup\") stopTone(octave, pitch);\n    };\n    // Thanks to https://www.pluralsight.com/guides/event-listeners-in-react-components!\n    window.addEventListener(\"keydown\", handleKeyboardShortcut);\n    window.addEventListener(\"keyup\", handleKeyboardShortcut);\n    // Without the following return statement, keyboard shortcuts will not play\n    // the correct wave type after changing the waveform from the wave selector\n    // dropdown, but clicking on notes will play the correct wave type.\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyboardShortcut);\n      window.removeEventListener(\"keyup\", handleKeyboardShortcut);\n    }\n  });\n\n  return (\n    <>\n      <WaveSelector currentWaveType={waveType} handleChange={changeWaveTypeTo} />\n      <Keyboard playTone={playTone} stopTone={stopTone} />\n      <Volume gainNode={mainGainNode} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}